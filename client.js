const WebSocket = require('ws');
const ws = new WebSocket('ws://localhost:27950/', {
  headers: {
    'x-forwarded-port': 27960
  }
});


function stripOOB(buffer) {
  var view = new DataView(buffer);

  // if (view.getInt32(0) !== -1) {
  //   return null;
  // }

  var str = '';
  for (var i = 4 /* ignore leading -1 */; i < buffer.byteLength - 1 /* ignore trailing \0 */; i++) {
    var c = String.fromCharCode(view.getUint8(i));
    str += c;
  }

  return str;
}

ws.binaryType = "binary";
ws.on('open', function (res) {

  let nums = [0xff, 0xff, 0xff, 0xff, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x20, 0x51, 0x75,
    0x61, 0x6b, 0x65, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x2d, 0x31, 0x0a];
  let array = new Float32Array(nums.length);
  nums.forEach((num, i) => array[i] = num);

  ws.send(nums, {binary: true});

  var a = 1;
  ws.on('message', function (res) {
    var view = Uint8Array.from(res);
    var buffer = view.buffer;

    console.log(stripOOB(buffer));

    if (a === 1) {
      a++;
      nums = [0xff, 0xff, 0xff, 0xff, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
        0x0a, 0x5c, 0x67, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x70, 0x61, 0x73, 0x73, 0x5c, 0x30, 0x5c, 0x70,
        0x75, 0x72, 0x65, 0x5c, 0x31, 0x5c, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5c, 0x30,
        0x5c, 0x73, 0x76, 0x5f, 0x6d, 0x61, 0x78, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x31,
        0x32, 0x5c, 0x67, 0x5f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
        0x5c, 0x30, 0x5c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x30, 0x5c, 0x6d, 0x61, 0x70,
        0x6e, 0x61, 0x6d, 0x65, 0x5c, 0x71, 0x33, 0x64, 0x6d, 0x37, 0x5c, 0x68, 0x6f, 0x73, 0x74, 0x6e,
        0x61, 0x6d, 0x65, 0x5c, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x20, 0x4d, 0x45, 0x5c, 0x70, 0x72,
        0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x37, 0x31, 0x5c, 0x67, 0x61, 0x6d, 0x65, 0x6e, 0x61,
        0x6d, 0x65, 0x5c, 0x51, 0x75, 0x61, 0x6b, 0x65, 0x33, 0x41, 0x72, 0x65, 0x6e, 0x61, 0x5c, 0x63,
        0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5c, 0x56, 0x38, 0x45, 0x6e, 0x2b, 0x55, 0x45,
        0x35, 0x67, 0x36,

      ]

      nums.forEach((num, i) => array[i] = num);

      ws.send(nums, {binary: true});

    }


  })

});


